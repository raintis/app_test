<?xml version="1.0" encoding="UTF-8"?>
        
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <groupId>org.jdbc4olap</groupId>
    <artifactId>jdbc4olap</artifactId>
    <version>1.1.4</version>
    <packaging>jar</packaging>
    
    <name>Jdbc4Olap</name>
    <description>Jdbc4Olap is a JDBC Type 4 driver for OLAP datasources, which partially implements the JDBC 3.0
        specification. It can communicate directly with most OLAP databases using the XMLA protocol : SAP® BW,
        Microsoft Analysis Services®, Mondrian...

        Furthermore, in order to support wider use, Jdbc4Olap includes a SQL-MDX converter and virtual relational map of
        OLAP databases.
    </description>
    <inceptionYear>2008</inceptionYear>
    <url>http://www.jdbc4olap.org/</url>

    <licenses>
        <license>
            <name>PRELYTIS LGPL v2 license</name>
            <url>LICENSE.txt</url>
            <distribution>repo</distribution>
        </license>
        <license>
            <name>LGPL v2 license</name>
            <url>http://www.gnu.org/licenses/old-licenses/library.txt</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <developers>
        <developer>
            <id>fsiberchicot</id>
            <name>Florian Siberchicot</name>
            <!--<email>fsiberchicot at jdbc4olap.org</email>-->
            <email>fsiberchicot at users.sourceforge.net</email>
            <roles>
                <role>admin</role>
                <role>developer</role>
            </roles>
        </developer>

        <developer>
            <id>bhamail</id>
            <name>Dan Rollo</name>
            <email>bhamail at users.sourceforge.net</email>
            <roles>
                <role>developer</role>
            </roles>
            <timezone>-5</timezone>
        </developer>
    </developers>

    <contributors>
        <contributor>
            <name>Kasper Sørensen</name>
            <email>kasper at eobjects.dk</email>
        </contributor>
    </contributors>

    <ciManagement>
        <system>CruiseControl</system>
        <url>https://lists.sourceforge.net/lists/listinfo/jdbc4olap-commits</url>
    </ciManagement>

    <mailingLists>
        <mailingList>
            <name>User List</name>
            <subscribe>https://lists.sourceforge.net/lists/listinfo/jdbc4olap-user</subscribe>
            <unsubscribe>https://lists.sourceforge.net/lists/listinfo/jdbc4olap-user</unsubscribe>
            <post>jdbc4olap-user@lists.sourceforge.net</post>
            <archive>http://sourceforge.net/mailarchive/forum.php?forum_name=jdbc4olap-user</archive>
        </mailingList>
        <mailingList>
            <name>Developer List</name>
            <subscribe>https://lists.sourceforge.net/lists/listinfo/jdbc4olap-development</subscribe>
            <unsubscribe>https://lists.sourceforge.net/lists/listinfo/jdbc4olap-development</unsubscribe>
            <post>jdbc4olap-development@lists.sourceforge.net</post>
            <archive>http://sourceforge.net/mailarchive/forum.php?forum_name=jdbc4olap-development</archive>
        </mailingList>
        <mailingList>
            <name>Commits List</name>
            <subscribe>https://lists.sourceforge.net/lists/listinfo/jdbc4olap-commits</subscribe>
            <unsubscribe>https://lists.sourceforge.net/lists/listinfo/jdbc4olap-commits</unsubscribe>
            <post>jdbc4olap-commits@lists.sourceforge.net</post>
            <archive>http://sourceforge.net/mailarchive/forum.php?forum_name=jdbc4olap-commits</archive>
        </mailingList>
    </mailingLists>

    <scm>
        <connection>scm:svn:https://jdbc4olap.svn.sourceforge.net/svnroot/jdbc4olap/trunk/jdbc4olap</connection>
        <developerConnection>scm:svn:https://jdbc4olap.svn.sourceforge.net/svnroot/jdbc4olap/trunk/jdbc4olap</developerConnection>
        <url>http://jdbc4olap.svn.sourceforge.net/</url>
    </scm>

    <properties>
        <!--
        If you get a compile error like:
        [INFO] Compilation failure

C:\path with spaces\jdbc4olap\src\org\jdbc4olap\jdbc\OlapStatement.java:[71,0] org.jdbc4olap.jdbc.OlapStatement is not a
bstract and does not override abstract method isPoolable() in java.sql.Statement

        then you are probably building using a jdk newer than 1.5.
        In order to build using jdk1.6 or newer, you need to add a command line system property pointing to the jdk1.5 javac.
        This is required to ensure the JDBC v3.0 api (which ships with 1.5) is used during compilation.
        The command line setting will override the default value set below.
        For example:
        mvn clean package -Djdk_1_5_home=/usr/java/jdk1.5.0_07
        or:
        mvn clean package -Djdk_1_5_home="C:\Program Files\Java\jdk1.5.0_07"
        -->
        <jdk_1_5_home>${java.home}/..</jdk_1_5_home>
    </properties>
    
    <build>
        <sourceDirectory>src</sourceDirectory>
        <resources>
            <!-- This exists only to ensure the files from the 'jjtree' folder (sql.jjt, SimpleNode.java) are
            included in the sources jar. This also results in the sql.jjt file being included in the production jar,
            which is not a problem.
            Investigate geronimo jjtree plugin for an alternative. -->
            <resource>
                <directory>${basedir}/jjtree</directory>
                <includes>
                    <include>**/*.jjt</include>
                </includes>
            </resource>
        </resources>

        <testSourceDirectory>test</testSourceDirectory>


        <plugins>

            <!--<plugin>-->
                <!--<groupId>org.apache.maven.plugins</groupId>-->
                <!--<artifactId>maven-enforcer-plugin</artifactId>-->
                <!--<version>1.0-alpha-4</version>-->
                <!--<executions>-->
                    <!--<execution>-->
                        <!--<id>enforce-plugin-versions</id>-->
                        <!--<goals>-->
                            <!--<goal>enforce</goal>-->
                        <!--</goals>-->
                        <!--<configuration>-->
                            <!--<rules>-->
                                <!--<requirePluginVersions/>-->
                                <!--<requireReleaseVersion/>-->
                                <!--<requireReleaseDeps/>-->
                            <!--</rules>-->
                        <!--</configuration>-->
                    <!--</execution>-->
                <!--</executions>-->
            <!--</plugin>-->

            <!-- verifies codebase compatibility with Java API's (ie: jdbc) for 1.5 -->
            <!-- not available from centrol repo :(
            <plugin>
                <groupId>org.jvnet</groupId>
                <artifactId>animal-sniffer</artifactId>
                <version>1.2</version>
                <executions>
                    <execution>
                        <id>check-java-version</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                        <configuration>
                            <signature>
                                <groupId>org.jvnet.animal-sniffer</groupId>
                                <artifactId>java1.5</artifactId>
                                <version>1.0</version>
                            </signature>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            -->

            <plugin>
                <!-- Compile using Java 5 spec. -->
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>1.5</source>
                    <target>1.5</target>

                    <!-- Set the system property: jkd_1_5_home to a path to jdk1.5 if building with jdk1.6 or newer.
                    See comment in properties section above. -->
                    <fork>true</fork>
                    <executable>${jdk_1_5_home}/bin/javac</executable>

                    <!--<verbose>true</verbose>-->
                </configuration>
                <!-- @todo Remove this after maven-compiler-plugin/plexus-utils issue is fixed.
                see: http://jira.codehaus.org/browse/MCOMPILER-79 for details
                -->
                <dependencies>
                    <dependency>
                        <groupId>org.codehaus.plexus</groupId>
                        <artifactId>plexus-utils</artifactId>
                        <version>1.5.6</version>
                    </dependency>
                </dependencies>
            </plugin>


            <!-- Generate grammar classes.
             JJTree processes sql.jjt to produce sql.jj,
             JavaCC processes sql.jj to produce *.java source files. -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>javacc-maven-plugin</artifactId>
                <version>2.4.1</version>
                <executions>
                    <execution>
                        <id>jjtree-javacc</id>
                        <goals>
                            <goal>jjtree-javacc</goal>
                            <!--<goal>jjtree</goal>-->
                        </goals>
                        <configuration>
                            <!-- The Java version for which to generate source code. -->
                            <jdkVersion>1.5</jdkVersion>

                            <!-- The directory where the decorated JavaCC grammar files (*.jjt) are located. It will be
                            recursively scanned for input files to pass to JJTree. The parameters includes and excludes
                            can be used to select a subset of files.
                            Default value is: ${basedir}/src/main/jjtree. -->
                            <sourceDirectory>jjtree</sourceDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>


            <!-- attach source jar -->
            <plugin>
                <artifactId>maven-source-plugin</artifactId>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- attach javadocs -->
            <plugin>
                <artifactId>maven-javadoc-plugin</artifactId>
                <executions>
                    <execution>
                        <id>attach-javadocs</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>


            <!-- build bundled release assemblies.
            The target/jdbc4olap-<version>-dist dir will contain copies of all jars needed at runtime. -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>2.2-beta-3</version>
                <executions>
                    <execution>
                        <id>make-assembly</id>
                        <phase>package</phase>
                        <goals>
                            <goal>directory-single</goal>
                        </goals>
                        <configuration>
                            <descriptors>
                                <descriptor>assembly/src.xml</descriptor>
                            </descriptors>
                        </configuration>
                    </execution>
                </executions>
            </plugin>


            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-site-plugin</artifactId>
                <!-- This version causes error below when run with an empty local .m2 repo.
                 Unable to find the mojo 'org.apache.maven.plugins:maven-site-plugin:2.0-beta-6:site' in the plugin 'org.apache.maven.plugins:maven-site-plugin'
                 @todo Restore version when latest site plugin works with an empty local .m2 repo and/or when
                 jira: http://jira.codehaus.org/browse/MNG-3284 is fixed (maven 2.0.11).
                -->
                <version>2.0-beta-6</version>
                <!--<version>2.0-beta-7</version>-->

                <executions>
                    <!-- build local site during package phase -->
                    <execution>
                        <id>create site</id>
                        <phase>package</phase>
                        <goals>
                            <goal>site</goal>
                        </goals>
                    </execution>
                    <!-- build local site and deploy during deploy phase -->
                    <execution>
                        <id>deploy site</id>
                        <phase>deploy</phase>
                        <goals>
                            <goal>deploy</goal>
                        </goals>
                    </execution>
                </executions>

                <configuration>
                    <!-- Override default location of site input files (to include Guide .pdf files in site). -->
                    <siteDirectory>sitesrc</siteDirectory>
                </configuration>
            </plugin>

        </plugins>
    </build>


    <reporting>
        <plugins>

            <plugin>
                <!-- Generate the BNF documentation for the sql grammer.
                Run 'mvn site' to generate the BNF report in: target/site/jjdoc/org/jdbc4olap/parsing/sql.html -->
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>javacc-maven-plugin</artifactId>
                <version>2.4.1</version>
            </plugin>

            <plugin>
                <!-- parses the generated TEST-*.xml files under ${basedir}/target/surefire-reports -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-report-plugin</artifactId>
                <version>2.4.2</version>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>report-only</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>

            <!-- until we publish a version of jdbc4olap, you need to run the command below, or the clirr will not run.
            mvn install:install-file -DgroupId=org.jdbc4olap -DartifactId=jdbc4olap -Dversion=1.0 -Dpackaging=jar -Dfile=/path/to/jdbc4olap.jar-1.0-file
            -->
            <plugin>
                <!-- Check for binary and source compatibility with older releases. -->
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>clirr-maven-plugin</artifactId>
                <version>2.2.2</version>
                <configuration>
                    <minSeverity>info</minSeverity>
                </configuration>
            </plugin>

            <!-- generates a cross-reference of the project's sources -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jxr-plugin</artifactId>
                <version>2.1</version>
            </plugin>

            <!-- generates a report on various tags found in the code -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>taglist-maven-plugin</artifactId>
                <version>2.2</version>
            </plugin>

            <!-- generates PMD and CPD reports using the PMD code analysis tool -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-pmd-plugin</artifactId>
                <version>2.3</version>
                <configuration>
                    <targetJdk>1.5</targetJdk>
                    <excludes>
                        <exclude>**/parsing/*.java</exclude>
                    </excludes>
                    <!--<excludeRoots>-->
                        <!--<excludeRoot>target/generated-sources</excludeRoot>-->
                    <!--</excludeRoots>-->
                </configuration>
            </plugin>

            <!-- generates report regarding the code style -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>2.2</version>
                <configuration>
                    <!-- shouldn't have to configure this, but it gets rid of bogus warning:
                    [WARNING] File encoding has not been set, using platform encoding UTF-8, i.e. build is platform dependent!
                    -->
                    <encoding>${project.build.sourceEncoding}</encoding>

                    <!-- based on config/sun_checks.xml, but also checks for headers in source files -->
                    <configLocation>config/jdbc4olap_checks.xml</configLocation>
                    <includeTestSourceDirectory>true</includeTestSourceDirectory>
                </configuration>
            </plugin>

            <!-- generates changelong report -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-changelog-plugin</artifactId>
                <version>2.1</version>
            </plugin>

        </plugins>
    </reporting>

    <dependencies>

        <dependency>
            <groupId>javax.xml.soap</groupId>
            <artifactId>saaj-api</artifactId>
            <version>1.3</version>
            <exclusions>
                <!-- exclude activation.jar dep from saaj-api because Sun activation.jar is not published on ibilio. -->
                <exclusion>
                    <groupId>javax.activation</groupId>
                    <artifactId>activation</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <!-- using javax.xml.bind activation.jar because it is published on ibilio. -->
        <dependency>
            <groupId>javax.xml.bind</groupId>
            <artifactId>activation</artifactId>
            <version>1.0.2</version>
            <scope>runtime</scope>
        </dependency>


        <dependency>
            <groupId>com.sun.xml.messaging.saaj</groupId>
            <artifactId>saaj-impl</artifactId>
            <version>1.3</version>
            <scope>runtime</scope>
        </dependency>

        <!-- provides Base64 encoding feature for XmlaLogin class. -->
        <dependency>
            <groupId>commons-codec</groupId>
            <artifactId>commons-codec</artifactId>
            <version>1.3</version>
        </dependency>

        <!-- not used, yet... -->
        <!--<dependency>-->
            <!--<groupId>org.apache.log4j</groupId>-->
            <!--<artifactId>log4j</artifactId>-->
            <!--<version>1.2.13</version>-->
            <!--<scope>system</scope>-->
            <!--<systemPath>${basedir}/lib/log4j-1.2.13.jar</systemPath>-->
        <!--</dependency>-->

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.3.1</version>
            <scope>test</scope>
        </dependency>

    </dependencies>


    <distributionManagement>
        <!-- To deploy to sourceforge:
        1. setup your maven ${home}/.m2/settings.xml with required passwords:

        </servers>
            </settings>
                <server>
                    <id>jdbc4olap-sf-repo-snapshots</id>
                    <username>yourSFUserName,jdbc4olap</username>
                    <password>yourSFPassword</password>
                </server>
                <server>
                    <id>jdbc4olap-sf-repo-releases</id>
                    <username>yourSFUserName,jdbc4olap</username>
                    <password>yourSFPassword</password>
                </server>
                <server>
                    <id>jdbc4olap-sf-m2site</id>
                    <username>yourSFUserName,jdbc4olap</username>
                    <password>yourSFPassword</password>
                </server>
            </servers>
        </settings>


        2. Create a shell to shell.sourceforge.net with your username (yourSFUserName):
            ssh -t <username>,jdbc4olap@shell.sf.net create

        3. if deploying a snaphot, run:
            mvn clean deploy

           if deploying a release, run:
            mvn clean release:prepare
           then:
            mvn release:perform

        4. verify you have a working web site: Open a browser to
            @todo Fix url when sf files in /home/groups/j/jd/jdbc4olap/htdocs/m2site are made accessible
            http://jdbc4olap.sf.net/m2site/index.html
        -->
        <snapshotRepository>
            <id>jdbc4olap-sf-repo-snapshots</id>
            <url>scp://shell.sourceforge.net/home/groups/j/jd/jdbc4olap/htdocs/m2repo/snapshots</url>
        </snapshotRepository>
        <repository>
            <id>jdbc4olap-sf-repo-releases</id>
            <url>scp://shell.sourceforge.net/home/groups/j/jd/jdbc4olap/htdocs/m2repo/releases</url>
        </repository>
        <site>
            <id>jdbc4olap-sf-m2site</id>
            <url>scp://shell.sourceforge.net/home/groups/j/jd/jdbc4olap/htdocs/m2site</url>
        </site>
    </distributionManagement>

</project>
